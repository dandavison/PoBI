#+title: A genome-wide perspective on the history of the British Isles
#+author: Dan, Chris, Garrett, Peter et al.

* Environment
** Org
#+babel:    :dir /davison@oak.well.ox.ac.uk:~/bench
#  +babel:    :dir ~/bench
#+options: ^:{}

#+begin_src emacs-lisp :cache no
  (setq org-babel-default-header-args:R '((:session . "*R-PoBI*")))
#+end_src

#+results:
| (:session . *R-PoBI*) |

** R environment
#+source: set-variables
#+begin_src R :var ifile=MS-ifile :results silent
  source("lib/libpobi.R")
  source("lib/libwtccc2.R")

  PATH <- "/home/davison/src/shellfish/bin"
  system("mkdir -p img rdata rlegend rmap flipind flipinput frdata freq lines indivs")
  
  chroms <- sprintf("%02d", 1:22)
  nwtccc2 <- 8267
  
  datafile <- function(chr, dataset=c("h","w"))
      switch(match.arg(dataset),
             h = sprintf("data/HM3/%s.hap", chr),
             w = sprintf("data/POBI+MS/%s-allx.gen", chr))
  legendfile <- function(chr, dataset=c("h","w"))
      switch(match.arg(dataset),
             h = sprintf("data/HM3/%s.legend", chr),
             w = error("No need for this"))
  mapfile <- function(chr, dataset=c("h","w"))
      switch(match.arg(dataset),
             h = sprintf("data/HM3/%s.map", chr),
             w = error("No need for this"))
  indivfile <- function(chr, dataset=c("h","w"))
      switch(match.arg(dataset),
             w = sprintf("data/POBI+MS/%s-allx.ids", chr),
             h = error("No need for this"))
  rdatafile <- function(chr, dataset)
      sprintf("rdata/%s-%s.%s", dataset, chr,
              if(dataset == "w") "gen" else "hap")
  rlegendfile <- function(chr, dataset)
      sprintf("rlegend/%s-%s.legend", dataset, chr)
  rmapfile <- function(chr, dataset)
      sprintf("rmap/%s-%s.map", dataset, chr)
  rstrandfile <- function(chr, dataset)
      sprintf("rstrand/%s", chr)
  frdatafile <- function(chr, dataset)
      sprintf("frdata/%s-%s.%s", dataset, chr,
              if(dataset == "w") "gen" else "hap")
  linesfile <- function(chr, dataset)
      sprintf("lines/%s-%s.lines", dataset, chr)
  freqfile <- function(chr, dataset)
      sprintf("freq/%s-%s.freq", dataset, chr)
  flipindfile <- function(chr, dataset)
      sprintf("flipind/%s-%s.flip", dataset, chr)
  flipinputfile <- function(chr, dataset)
      sprintf("flipinput/%s-%s.flip", dataset, chr)
  hapfile <- function(chr, dataset=c("h","w"))
      switch(match.arg(dataset),
             w = sprintf("impute2/out/%s_haps", chr),
             h = sprintf("data/HM3/%s.hap", chr))
  posfile <- function(chr, dataset=c("h","w"))
      switch(match.arg(dataset),
             w = sprintf("pos/%s", chr),
             h = error("No need for this"))
#+end_src

* DONE MS exclusions
#+begin_src R
  MSindivs <- read.table(ifile, header=TRUE, row.names=2)[-1]
  colnames(MSindivs) <- "country"
#+end_src
** Variables
#+source: MS-ifile
#+begin_src emacs-lisp :results silent
"data/MS/MS_illumina.sample.geoinfoIII"
#+end_src


** Select countries
#+tblname: include-countries
| Country |    n |
|---------+------|
| Belgium |  566 |
| Denmark |  363 |
| France  |  536 |
| Germany | 1166 |
| Ireland |   73 |
| Italy   |  776 |
| Norway  | 1030 |
| Poland  |   59 |
| Spain   |  211 |
| Sweden  | 1401 |

#+begin_src R :var include.countries=include-countries :rownames yes :colnames yes
  include.countries <- rownames(include.countries)
  MSindivs$include <- MSindivs$country %in% include.countries
  system("mkdir -p data/MS/exclusions")
  cat(rownames(MSindivs)[!MSindivs$include], file="data/MS/exclusions/country-exclusions", sep="\n")
  table(MSindivs$country, MSindivs$include)
#+end_src

#+results:
|            | FALSE | TRUE |
|------------+-------+------|
| Australia  |   705 |    0 |
| Belgium    |     0 |  566 |
| Denmark    |     0 |  363 |
| FIN        |   652 |    0 |
| France     |     0 |  536 |
| Germany    |     0 | 1166 |
| Ireland    |     0 |   73 |
| Italy      |     0 |  776 |
| NewZealand |   156 |    0 |
| Norway     |     0 | 1030 |
| Poland     |     0 |   59 |
| Spain      |     0 |  211 |
| Sweden     |     0 | 1401 |
| UK         |  2048 |    0 |
| USA        |  1634 |    0 |

** Exclusions

#+begin_src sh
cat data/MS/exclusions/* | sort | uniq > data/MS/exclusions.all
#+end_src

#+begin_src sh :session none
wc -l data/MS/exclusions/*
echo $(cat data/MS/exclusions/* | sort | uniq | wc -l) unique
wc -l data/MS/exclusions.all
#+end_src

#+results:
|  910 | data/MS/exclusions/MSInternalExclusions.dan.txt |
| 5195 | data/MS/exclusions/country-exclusions           |
| 6105 | total                                           |
| 5565 | unique                                          |
| 5565 | data/MS/exclusions.all                          |
** Sample numbers

- PoBI+MS id files have 7924 individs
- Raw files and exclusion files suggest there should be 8233 in PoBI+MS.
- Data files have 8267

  #+begin_src R :results output
  system(paste("~/bin/numindivs-gen", datafile("22", "w")))
  #+end_src


|       | PoBI |    MS | PoBI+MS |
|-------+------+-------+---------|
| all   | 2912 | 11376 |         |
| ex    |  368 |  5687 |         |
| final | 2544 |  5689 |    8233 |
#+TBLFM: @4$4=@4$2+@4$3
#+TBLFM: @4$3=@2$3-@3$3
#+TBLFM: @4$2=@2$2-@3$2

#+begin_src sh
wc -l data/POBI+MS/*-allx.ids
#+end_src

#+results:
|   7924 | data/POBI+MS/01-allx.ids |
|   7924 | data/POBI+MS/02-allx.ids |
|   7924 | data/POBI+MS/03-allx.ids |
|   7924 | data/POBI+MS/04-allx.ids |
|   7924 | data/POBI+MS/05-allx.ids |
|   7924 | data/POBI+MS/06-allx.ids |
|   7924 | data/POBI+MS/07-allx.ids |
|   7924 | data/POBI+MS/08-allx.ids |
|   7924 | data/POBI+MS/09-allx.ids |
|   7924 | data/POBI+MS/10-allx.ids |
|   7924 | data/POBI+MS/11-allx.ids |
|   7924 | data/POBI+MS/12-allx.ids |
|   7924 | data/POBI+MS/13-allx.ids |
|   7924 | data/POBI+MS/14-allx.ids |
|   7924 | data/POBI+MS/15-allx.ids |
|   7924 | data/POBI+MS/16-allx.ids |
|   7924 | data/POBI+MS/17-allx.ids |
|   7924 | data/POBI+MS/18-allx.ids |
|   7924 | data/POBI+MS/19-allx.ids |
|   7924 | data/POBI+MS/20-allx.ids |
|   7924 | data/POBI+MS/21-allx.ids |
|   7924 | data/POBI+MS/22-allx.ids |
| 174328 | total                    |

* DONE Create combined POBI+MS data set
** wtccc2-analyse invocation
#+begin_src sh
  cd data/POBI+MS
  for chrom in `seq -w 14 22 | tac` ; do
      python ~/src/wtccc2/wtccc2-analyse/wtccc2-analyse.py \
          --make-gen --platform illumina \
          --cohorts 'MS POBI' --exclude ../MS/exclusions.all \
          --chrom $chrom --outfile $chrom
  done
#+end_src

** Check output for chr22
   :PROPERTIES:
   :dir: /davison@oak.well.ox.ac.uk:/home/davison/bench/data/POBI+MS-test/
   :END:
*** DONE Numbers in raw files

#+begin_example 
~/bench/data/POBI+MS-test> bash z.sh
Wed Aug 25 20:00:04 2010
Analysis                      PCA
Cohorts                       ['MS', 'POBI']
Chromosomes                   [22]
SNP file                      None
Output file/prefix            22
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Intersecting chromosome files

gunzip -vc /data/oak/project/wtccc2/MS/illumina/calls/MS_22_illumina.gen.gz > 22-MS-22.tmp
/data/oak/project/wtccc2/MS/illumina/calls/MS_22_illumina.gen.gz:	 93.8%
gunzip -vc /data/oak/project/wtccc2/POBI/illumina/calls/POBI_22_illumina.gen.gz > 22-POBI-22.tmp
/data/oak/project/wtccc2/POBI/illumina/calls/POBI_22_illumina.gen.gz:	 94.4%
insect -v --unique -d ' ' -f 2 -o 22-insect_out 22-MS-22.tmp 22-POBI-22.tmp
cut -d ' ' -f 2 < 22-MS-22.tmp > /tmp/insect-1601-188280147932
cut -d ' ' -f 2 < 22-POBI-22.tmp > /tmp/insect-1601-415504816454
sort /tmp/insect-1601-188280147932 | uniq > /tmp/insect-1601-281609185427
sort /tmp/insect-1601-415504816454 | uniq > /tmp/insect-1601-993330115599
comm -12 /tmp/insect-1601-281609185427 /tmp/insect-1601-993330115599 > /tmp/insect-1601-686997337336
match /tmp/insect-1601-686997337336 < /tmp/insect-1601-188280147932 > /tmp/insect-1601-100889485177
match /tmp/insect-1601-686997337336 < /tmp/insect-1601-415504816454 > /tmp/insect-1601-16338026931
paste /tmp/insect-1601-100889485177 /tmp/insect-1601-100889485177 | sort -n -k 1 | cut -f 2 > /tmp/insect-1601-828485611156
paste /tmp/insect-1601-100889485177 /tmp/insect-1601-16338026931 | sort -n -k 1 | cut -f 2 > /tmp/insect-1601-661844370606
lines -f /tmp/insect-1601-828485611156 < 22-MS-22.tmp > 22-insect_out/22-MS-22.tmp.insect
lines -f /tmp/insect-1601-661844370606 < 22-POBI-22.tmp > 22-insect_out/22-POBI-22.tmp.insect
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Concatenating chromosomes

cat 22-insect_out/22-MS-* > 22-MS.gen
cat 22-insect_out/22-POBI-* > 22-POBI.gen
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Restricting to selected SNPs

shellfish --make-gen --file 22-MS  --out 22-MSr --messy
2010-08-25_20.00.24
shellfish version 0.0.8
20:00:24	Found .gen format data 22-MS.gen
20:00:24	File1: found .gen format data with 11376 individuals and 9607 SNPs
#+end_example

#+function: numindivs(coh)
#+begin_src sh
wc -l < ~/data/wtccc2/$coh/illumina/calls/${coh}_illumina.sample
#+end_src


#+call: numindivs(coh="MS")
#+results: numindivs(coh="MS")
: 11378

#+begin_example 
mv 22-MS.sample 22-MSr.sample
shellfish --make-gen --file 22-POBI  --out 22-POBIr --messy
2010-08-25_20.00.24
shellfish version 0.0.8
20:00:24	Found .gen format data 22-POBI.gen
20:00:24	File1: found .gen format data with 2912 individuals and 9607 SNPs
#+end_example

#+call: numindivs(coh="POBI")
#+results: numindivs(coh="POBI")
: 2914

*** Excluding individuals
**** MS
***** DONE Unrecognised individs

#+begin_example 
Excluding individuals

cat /data/oak/project/wtccc2/MS/illumina/exclusions/*.exclude.txt ../MS/exclusions.all | sort | uniq > 22-MS.xids
sed 1,2d /data/oak/project/wtccc2/MS/illumina/calls/MS_illumina.sample | cut -d ' ' -f 1 | match 22-MS.xids > 22-MS.wNA.xidx
MS: 1 excluded individuals not recognised
#+end_example

#+begin_src R :session :results output
  on.exit(closeAllConnections())
  MS.ids.x <- scan("22-MS.xids", what="", quiet=TRUE)
  MS.samplef <- "/data/oak/project/wtccc2/MS/illumina/calls/MS_illumina.sample"
  MS.ids.full <- scan(pipe(sprintf("sed 1,2d %s | cut -d ' ' -f 1", MS.samplef)), what="", quiet=TRUE)
  
  ok <- MS.ids.x %in% MS.ids.full
  cat("Number of individs: ", length(MS.ids.full), "\n")
  cat("Number of individs to be excluded: ", length(MS.ids.x), "\n")
  cat("Of these number recognised: ", sum(ok), "\n")
  cat(sprintf("Not recognised (line %d):\n", which(!ok)))
  print(MS.ids.x[!ok])
#+end_src

#+results:
: 
:  Number of individs:  11376
: Number of individs to be excluded:  5688
: Of these number recognised:  5687
: Not recognised (line 5654):
: [1] "97505_H0392029_C04"


So line 5654 of MS.ids.x looks screwed up; the reason is that there's
no new line at the end of
/data/oak/project/wtccc2/MS/illumina/exclusions/MS_illumina_UnaffectedTwins.exclude.txt

***** DONE Numbers
#+begin_example
echo num lines: `grep -vF NA 22-MS.wNA.xidx | sort -n | wc -l`
num lines: 5687
grep -vF NA 22-MS.wNA.xidx | sort -n > 22-MS.xidx
columns -s -v -f 22-MS.xidx < 22-MSr.gen > 22-MSx.gen
sed 1,2d /data/oak/project/wtccc2/MS/illumina/calls/MS_illumina.sample | cut -d ' ' -f 1 | slice -v --line-file 22-MS.xidx > 22-MSx.ids
mv 22-MSr.sample 22-MSx.sample
#+end_example

So 5687 should have been removed from MS, leaving us with 11376-5687 = 5689

Which is correct. The problem is the 5288 in 22-MSx.ids

#+begin_src sh
echo -n "To_exclude "
wc -l 22-MS.xids

echo -n "Indices_to_be_excluded "
wc -l 22-MS.wNA.xidx

echo -n "Indices_to_be_excluded_wo_NA "
wc -l 22-MS.xids

echo -n "Included_IDs "
wc -l 22-MSx.ids

echo -n "Num_indivs_in_gen_file "
~/bin/numindivs-gen 22-MSx.gen
#+end_src

#+results:
| To_exclude                   | 5688 | 22-MS.xids     |
| Indices_to_be_excluded       | 5688 | 22-MS.wNA.xidx |
| Indices_to_be_excluded_wo_NA | 5688 | 22-MS.xids     |
| Included_IDs                 | 5689 | 22-MSx.ids     |
| Num_indivs_in_gen_file       | 5689 |                |

#+begin_src R
5688*3
#+end_src

#+results:
: 17064

**** PoBI
***** Unrecognised individs
#+begin_example 
    cat /data/oak/project/wtccc2/POBI/illumina/exclusions/*.exclude.txt ../MS/exclusions.all | sort | uniq > 22-POBI.xids
    sed 1,2d /data/oak/project/wtccc2/POBI/illumina/calls/POBI_illumina.sample | cut -d ' ' -f 1 | match 22-POBI.xids > 22-POBI.xidx
    POBI: 5565 excluded individuals not recognised
#+end_example

This 5565 is the number of indivs in MS/exclusions.all, so that makes sense.

#+begin_src R :session :results output
  on.exit(closeAllConnections())
  POBI.ids.x <- scan("22-POBI.xids", what="", quiet=TRUE)
  POBI.samplef <- "/data/oak/project/wtccc2/POBI/illumina/calls/POBI_illumina.sample"
  POBI.ids.full <- scan(pipe(sprintf("sed 1,2d %s | cut -d ' ' -f 1", POBI.samplef)), what="", quiet=TRUE)
  
  ok <- POBI.ids.x %in% POBI.ids.full
  cat("Number of individs: ", length(POBI.ids.full), "\n")
  cat("Number of individs to be excluded: ", length(POBI.ids.x), "\n")
  cat("Of these number recognised: ", sum(ok), "\n")
#+end_src

#+results:
: 
:  Number of individs:  2912
: Number of individs to be excluded:  5899
: Of these number recognised:  334

***** DONE Numbers
#+begin_example
grep -vF NA 22-POBI.wNA.xidx | sort -n > 22-POBI-tmp && mv 22-POBI-tmp 22-POBI.xidx
columns -s -v -f 22-POBI.xidx < 22-POBIr.gen > 22-POBIx.gen
sed 1,2d /data/oak/project/wtccc2/POBI/illumina/calls/POBI_illumina.sample | cut -d ' ' -f 1 | slice -v --line-file 22-POBI.xidx > 22-POBIx.ids
mv 22-POBIr.sample 22-POBIx.sample
#+end_example

So 334 should have been removed from POBI, leaving us with src_R{2912-334} = 2578.

#+begin_src sh
~/bin/numindivs-gen 22-POBIx.gen
wc -l 22-POBIx.ids
#+end_src

#+results:
| 2578 |              |
| 2578 | 22-POBIx.ids |

*** Combine across cohorts
#+begin_example 
Combining data across cohorts

cut -d ' ' -f 1-5 < 22-MSx.gen > 22-MSx.map
cut -d ' ' -f 6- < 22-MSx.gen > 22-MSx.gen_only
cut -d ' ' -f 1-5 < 22-POBIx.gen > 22-POBIx.map
cut -d ' ' -f 6- < 22-POBIx.gen > 22-POBIx.gen_only
paste -d ' ' 22-MSx.gen 22-POBIx.gen_only > 22-allx.gen
cat 22-MSx.ids 22-POBIx.ids > 22-allx.ids
#+end_example

Total should be src_R{5689+2578}=8267

#+begin_src sh
~/bin/numindivs-gen 22-allx.gen
wc -l *.ids
#+end_src

#+results:
|  8267 |              |
|  5288 | 22-MSx.ids   |
|  2636 | 22-POBIx.ids |
|  7924 | 22-allx.ids  |
| 15848 | total        |

* DONE Prepare data set for phasing
** Environment
*** Create links to HapMap data files
#+begin_src sh
  cd data/HM3
  for i in `seq 1 22` ; do
      ln -fs \
          ../hapmap3_r2_plus_1000g_jun2010_b36_ceu/hapmap3.r2.b36.allMinusPilot1CEU.chr$i.snpfilt.haps \
          `printf "%02d" $i`.hap
  
      ln -fs \
          ../hapmap3_r2_plus_1000g_jun2010_b36_ceu/hapmap3.r2.b36.allMinusPilot1CEU.chr$i.snpfilt.legend \
          `printf "%02d" $i`.legend
      ln -fs \
          ../hapmap3_r2_plus_1000g_jun2010_b36_ceu/genetic_map_chr${i}_combined_b36.txt \
          `printf "%02d" $i`.map
  done
#+end_src
*** R data frames
#+source: set-up-data-frames
#+begin_src R
  dd <- list()
  dd$h <- lapply(legendfile(chroms, "h"), read.table, header=TRUE, as.is=TRUE, col.names=c("rs","pos","a0","a1"))
  dd$w <- lapply(chroms, function(chr)
                 read.table(pipe(sprintf("cut -d' ' -f2-5 < %s", datafile(chr,"w"))),
                            header=FALSE, as.is=TRUE, col.names=c("rs","pos","a0","a1")))
  names(dd$h) <- names(dd$w)  <- chroms
  
  df <- data.frame(row.names=chroms)
  df$Lh <- sapply(dd$h, nrow)
  df$Lw <- sapply(dd$w, nrow)
  df$hinw <- mapply(function(h, w) sum(h$rs %in% w$rs), dd$h, dd$w, SIMPLIFY=FALSE)
  df$winh <- mapply(function(h, w) sum(w$rs %in% h$rs), dd$h, dd$w, SIMPLIFY=FALSE)
#+end_src

** DONE Restrict to intersection
We're going to flip WTCCC2 to match HapMap3
*** Create merged SNP lists
#+source: create-isect
#+begin_src R
  isect <- mapply(merge, dd$w, dd$h, MoreArgs=list(by="rs"), SIMPLIFY=FALSE)
  isect <- lapply(isect, function(i) i[order(i$pos.x),])
#+end_src
*** Create restricted data files
#+source: create-restricted-files
#+begin_src R
  for(c in chroms) {
      for(d in c("w","h")) {
          ## map <- match(isect[[c]]$rs, dd[[d]][[c]]$rs)
          ## cat(map, sep="\n", file=linesfile(c, d))
          ## stopifnot(!is.na(map))
          ## cmd <- paste(file.path(PATH, "lines"),
          ##              "-f", linesfile(c, d),
          ##              "<", datafile(c, d),
          ##              ">", rdatafile(c, d))
          ## print(cmd)
          ## system(cmd)
          ## if(d == "h") {
          ##     ## legend and mapfiles have headers
          ##     lfile <- tempfile()
          ##     cat(map+1, sep="\n", file=lfile)
    
          ##     cmd <- paste(file.path(PATH, "lines"),
          ##                  "-f", lfile,
          ##                  "<", legendfile(c, "h"),
          ##                  ">", rlegendfile(c, "h"))
          ##     print(cmd)
          ##     system(cmd)
    
          ##     cmd <- paste(file.path(PATH, "lines"),
          ##                  "-f", lfile,
          ##                  "<", mapfile(c, "h"),
          ##                  ">", rmapfile(c, "h"))
          ##     print(cmd)
          ##     system(cmd)
          ## }
          cat(rep("+", length(map)), sep="\n", file=rstrandfile(c, "w"))
      }
  }
#+end_src

*** Make pos file
#+begin_src R
  make.pos.files <- function() {
      dir.create("pos")
      for(c in chroms) {
          pos <- scan(pipe(paste("cut -d' ' -f3 <", frdatafile(c, "w"))), what=integer())
          cat(pos, file=file.path("pos", c), sep="\n")
      }
  }
  make.pos.files()
#+end_src

** DONE Check restricted data dimensions

#+begin_src sh :colnames yes
  printf "chr\thapmap-L\twtccc2-L\thapmap-n\twtccc2-n\n"
  for i in `seq -w 1 22` ; do
      h=rdata/h-$i.hap
      w=rdata/w-$i.gen
      printf "%02d\t%d\t%d\t%d\t%d\n" \
          $i \
          `wc -l < $h` \
          `wc -l < $w` \
          `head -n1 $h | wc | awk '{print $2}'` \
          `~/bin/numindivs-gen $w`
  done
#+end_src

#+results:
| chr | hapmap-L | wtccc2-L | hapmap-n | wtccc2-n |
|   1 |    38977 |    38977 |      410 |     8267 |
|   2 |    41420 |    41420 |      410 |     8267 |
|   3 |    34441 |    34441 |      410 |     8267 |
|   4 |    30084 |    30084 |      410 |     8267 |
|   5 |    31185 |    31185 |      410 |     8267 |
|   6 |    33177 |    33177 |      410 |     8267 |
|   7 |    27372 |    27372 |      410 |     8267 |
|   0 |    28491 |    28491 |      410 |     8267 |
|   0 |    24386 |    24386 |      410 |     8267 |
|  10 |    26922 |    26922 |      410 |     8267 |
|  11 |    24865 |    24865 |      410 |     8267 |
|  12 |    24696 |    24696 |      410 |     8267 |
|  13 |    18973 |    18973 |      410 |     8267 |
|  14 |    16758 |    16758 |      410 |     8267 |
|  15 |    15284 |    15284 |      410 |     8267 |
|  16 |    15627 |    15627 |      410 |     8267 |
|  17 |    13338 |    13338 |      410 |     8267 |
|  18 |    15224 |    15224 |      410 |     8267 |
|  19 |     8656 |     8656 |      410 |     8267 |
|  20 |    13139 |    13139 |      410 |     8267 |
|  21 |     7475 |     7475 |      410 |     8267 |
|  22 |     7635 |     7635 |      410 |     8267 |

** Flip the WTCCC2 genotypes to match HapMap3 strand
*** Construct flip indicator files
#+source: create-flip-indicator-files
#+begin_src R
  flipind <- function(df, file) {
      alleles <- df[,c("a0.x", "a1.x","a0.y","a1.y")]
      ind <- rep(3, nrow(alleles))
      ok <- apply(alleles, 1, function(a) all(a %in% c("A","C","G","T")))
      write.table(alleles[ok,], file=file, quote=FALSE, row.names=FALSE, col.names=FALSE)
      ind[ok] <- scan(pipe(sprintf("%s/flipind < %s", PATH, file)), what=integer())
      ind
  }
  
  for(c in chroms)
      for(d in "w") {
          cat(flipind(isect[[c]], flipinputfile(c, d)), file=flipindfile(c, d), sep="\n")
      }
#+end_src
*** Flip WTCCC2 PoBI+MS
#+source: create-flipped-files
#+begin_src R
  for(c in rev(chroms)) {
    cmd <- sprintf("%s/%s -i %s -n %02d < %s > %s",
                   PATH, "flipgen",
                   flipindfile(c, "w"),
                   nwtccc2,
                   rdatafile(c, "w"),
                   frdatafile(c, "w"))
    print(cmd)
    system(cmd)
  
    cmd <- sprintf("ln -fs $PWD/%s %s", rdatafile(c, "h"), frdatafile(c, "h"))
    print(cmd)
    system(cmd)
  }
#+end_src

*** Create strand indicators
#+source: create-strand-indicators
#+begin_src R
  for(c in chroms) {
      w <- pipe(paste("cut -d' ' -f4-5 <", frdatafile(c, "w")))
      h <- pipe(paste("cut -d' ' -f3-4 <", rlegendfile(c, "h")))
      w <- matrix(scan(w, what=""), nrow=2)
      h <- matrix(scan(h, what=""), nrow=2)
      strand <- ifelse(is.same.strand(w, h), "+", "-")
      w.pos <- scan(pipe(paste("cut -d' ' -f3 <", frdatafile(c, "w"))), what=integer())
      h.pos <- scan(pipe(paste("cut -d' ' -f2 <", rlegendfile(c, "h"))), what=integer())
      if(any(bad <- w.pos != h.pos))
          warning("Physical position differs for ", sum(bad), " SNPs on chromosome ", c)
      cat(paste(w.pos, strand), sep="\n", file=file.path("rstrand", c))
  }
#+end_src

** DONE Check flipped data dimensions
*** DONE Flip indicators
#+begin_src sh
  wc -l flipind/*
#+end_src

#+results:
|  38977 | flipind/w-01.flip |
|  41420 | flipind/w-02.flip |
|  34441 | flipind/w-03.flip |
|  30084 | flipind/w-04.flip |
|  31185 | flipind/w-05.flip |
|  33177 | flipind/w-06.flip |
|  27372 | flipind/w-07.flip |
|  28491 | flipind/w-08.flip |
|  24386 | flipind/w-09.flip |
|  26922 | flipind/w-10.flip |
|  24865 | flipind/w-11.flip |
|  24696 | flipind/w-12.flip |
|  18973 | flipind/w-13.flip |
|  16758 | flipind/w-14.flip |
|  15284 | flipind/w-15.flip |
|  15627 | flipind/w-16.flip |
|  13338 | flipind/w-17.flip |
|  15224 | flipind/w-18.flip |
|   8656 | flipind/w-19.flip |
|  13139 | flipind/w-20.flip |
|   7475 | flipind/w-21.flip |
|   7635 | flipind/w-22.flip |
| 498125 | total             |

*** DONE Flipped data
#+begin_src sh :colnames yes
  printf "chr\thapmap-L\twtccc2-L\thapmap-n\twtccc2-n\n"
  for i in `seq -w 1 22` ; do
      h=frdata/h-$i.hap
      w=frdata/w-$i.gen
      printf "%02d\t%d\t%d\t%d\t%d\n" \
          $i \
          `wc -l < $h` \
          `wc -l < $w` \
          `head -n1 $h | wc | awk '{print $2}'` \
          `~/bin/numindivs-gen $w`
  done
#+end_src

#+results:
| chr | hapmap-L | wtccc2-L | hapmap-n | wtccc2-n |
|   1 |    38977 |    38977 |      410 |     8267 |
|   2 |    41420 |    41420 |      410 |     8267 |
|   3 |    34441 |    34441 |      410 |     8267 |
|   4 |    30084 |    30084 |      410 |     8267 |
|   5 |    31185 |    31185 |      410 |     8267 |
|   6 |    33177 |    33177 |      410 |     8267 |
|   7 |    27372 |    27372 |      410 |     8267 |
|   0 |    28491 |    28491 |      410 |     8267 |
|   0 |    24386 |    24386 |      410 |     8267 |
|  10 |    26922 |    26922 |      410 |     8267 |
|  11 |    24865 |    24865 |      410 |     8267 |
|  12 |    24696 |    24696 |      410 |     8267 |
|  13 |    18973 |    18973 |      410 |     8267 |
|  14 |    16758 |    16758 |      410 |     8267 |
|  15 |    15284 |    15284 |      410 |     8267 |
|  16 |    15627 |    15627 |      410 |     8267 |
|  17 |    13338 |    13338 |      410 |     8267 |
|  18 |    15224 |    15224 |      410 |     8267 |
|  19 |     8656 |     8656 |      410 |     8267 |
|  20 |    13139 |    13139 |      410 |     8267 |
|  21 |     7475 |     7475 |      410 |     8267 |
|  22 |     7635 |     7635 |      410 |     8267 |

Was:

| chr | hapmap-L | wtccc2-L | hapmap-n | wtccc2-n |
|   1 |    38977 |    38977 |      410 |     8267 |
|   2 |    41420 |    30687 |      410 |     8267 |
|   3 |    34441 |    34441 |      410 |     8267 |
|   4 |    30084 |    30084 |      410 |     8267 |
|   5 |    31185 |    31185 |      410 |     8267 |
|   6 |    33177 |    33177 |      410 |     8267 |
|   7 |    27372 |    27372 |      410 |     8267 |
|   0 |    28491 |    28491 |      410 |     8267 |
|   0 |    24386 |    24386 |      410 |     8267 |
|  10 |    26922 |    26922 |      410 |     8267 |
|  11 |    24865 |    24865 |      410 |     8267 |
|  12 |    24696 |    24696 |      410 |     8267 |
|  13 |    18973 |    18973 |      410 |     8267 |
|  14 |    16758 |    16758 |      410 |     8267 |
|  15 |    15284 |    15284 |      410 |     8267 |
|  16 |    15627 |    15433 |      410 |     8267 |
|  17 |    13338 |    13338 |      410 |     8267 |
|  18 |    15224 |    15224 |      410 |     8267 |
|  19 |     8656 |     8656 |      410 |     8267 |
|  20 |    13139 |     5776 |      410 |     8267 |
|  21 |     7475 |     7475 |      410 |     8267 |
|  22 |     7635 |     7635 |      410 |     8267 |

** DONE Check allele frequencies
#+begin_src R
  freq <- lapply(chroms, list)
  for(c in rev(chroms)) {
      nh <- 1910 ## 410
      ## Read in hapmap haplotypes in intersection
      freq[[c]]$h <- 1 - colMeans(matrix(scan(frdatafile(c, "h"), what=integer()), nrow=nh))
      cat(freq[[c]]$h, sep="\n", file=freqfile(c,"h"))
      
      ## Create w freq file
      cmd <- sprintf("%s/sstat -p -n %d < %s > %s",
                     PATH, nwtccc2, frdatafile(c,"w"), freqfile(c,"w"))
      print(cmd)
      system(cmd)
      freq[[c]]$w <- 1 - scan(freqfile(c,"w"))
      cat(freq[[c]]$w, sep="\n", file=freqfile(c,"w"))   
  
      png(file=sprintf("img/%s-freqs.png", c))
      plot(freq[[c]]$h, freq[[c]]$w, xlab="HapMap3",ylab="PoBI+MS")
      dev.off()
  }
#+end_src

#+results:
| 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20 | 21 | 22 |

Functions to compute frequency of allele 0
#+begin_src R
  wfrequency <- function(c, i) {
      w <- scan(pipe(sprintf("sed -n -e %dp -e %dq < %s",
                             i, i, rdatafile(c, "w"))),
                quiet=TRUE, what="")
      wg <- matrix(as.numeric(w[6:length(w)]), nrow=3)
      mean(t(2:0) %*% wg) / 2
  }
  
  hfrequency <- function(c, i)
      1 - mean(scan(pipe(sprintf("sed -n -e %dp -e %dq < %s",
                                 i, i, rdatafile(c, "h"))),
                    quiet=TRUE, what=integer()))
#+end_src
** Check
#+tblname: rsids
| SNP       |
|-----------|
| rs5747968 |
| rs2236639 |
| rs9605028 |

#+source: check-SNPs(rsids=rsids)
#+begin_src R :results insert value :colnames yes
  check.snp <- function(rs, c) {
      idx <- which(isect[[c]]$rs == rs)
      pipe.w <- function(c)
          pipe(sprintf("sed -n -e %dp -e %dq < %s | cut -d' ' -f4-5",
                         idx, idx, rdatafile(c, "w")))
        pipe.h <- function(c)
            pipe(sprintf("sed -n -e %dp -e %dq < %s | cut -d' ' -f3-4",
                         idx, idx, rlegendfile(c, "h")))
      
        data.frame(rs = rs,
                   chr = c,
                   alleles.w = paste(scan(pipe.w(c), what=""), collapse="/"),
                   alleles.h = paste(scan(pipe.h(c), what=""), collapse="/"),
                   freq.w = round(wfrequency(c, idx), 2),
                   freq.h = round(hfrequency(c, idx), 2))
    }
    
    do.call("rbind", lapply(rsids[,1], check.snp, "22"))
#+end_src

| rs        | chr | alleles.w | alleles.h | freq.w | freq.h |
|-----------+-----+-----------+-----------+--------+--------|
| rs5747968 |  22 | A/C       | G/T       |   0.67 |   0.22 |
| rs2236639 |  22 | A/G       | A/G       |   0.08 |   0.15 |
| rs9605028 |  22 | A/G       | A/G       |   0.95 |   0.95 |

| rs        | chr | alleles.w | alleles.h | freq.w | freq.h |
|-----------+-----+-----------+-----------+--------+--------|
| rs5747968 |  22 | A/C       | T/G       |   0.67 |   0.69 |
| rs2236639 |  22 | A/G       | G/A       |   0.08 |   0.95 |
| rs9605028 |  22 | A/G       | A/G       |   0.95 |   0.95 |
| rs        | chr | alleles.w | alleles.h | freq.w | freq.h |
|-----------+-----+-----------+-----------+--------+--------|
| rs5747968 |  22 | A/C       | T/G       |   0.67 |   0.69 |
| rs2236639 |  22 | A/G       | G/A       |   0.08 |   0.95 |
| rs9605028 |  22 | A/G       | A/G       |   0.95 |   0.95 |

#+results: check-SNPs (hapmap3+1kG)
| rs        | chr | alleles.w | alleles.h | freq.w | freq.h |
|-----------+-----+-----------+-----------+--------+--------|
| rs5747968 |  22 | A/C       | G/T       |   0.33 |   0.22 |
| rs2236639 |  22 | A/G       | A/G       |   0.92 |   0.15 |
| rs9605028 |  22 | A/G       | A/G       |   0.05 |   0.95 |



# hapmap3
| rs        | chr | alleles.w | alleles.h | freq.w | freq.h |
|-----------+-----+-----------+-----------+--------+--------|
| rs5747968 |  22 | A/C       | T/G       |   0.33 |   0.69 |
| rs2236639 |  22 | A/G       | G/A       |   0.92 |   0.95 |
| rs9605028 |  22 | A/G       | A/G       |   0.05 |   0.95 |


- HapMap website says rs2236639 has A allele CEU frequency .084.
- a0,a1 means a0 <-> 0, a1 <-> 1
- So HapMap frequencies are 1 - mean(hap)
- WTCCC2 frequencies are c(2,1,0) %*% genop



| rs#       | chrom |      pos | strand | build    | ref_allele | ref-allele_freq | ref-allele_count | other_allele | other-freq | other-allele_count |
| rs2236639 | chr22 | 15452483 | +      | ncbi_b36 | A          |           0.084 |               19 | G            |      0.916 |                207 |

** Babel script
#+begin_src R :noweb yes
  <<set-variables()>>
  <<set-up-data-frames()>>
  <<create-isect()>>
  <<create-restricted-files()>>
  <<create-flip-indicator-files()>>
  <<create-flipped-files()>>
#+end_src

#+results:
: 0

* TODO What's going on with chromosome 1 ??
* STARTED Phasing
** Shell version
   -strand_g frdata/w-$c.gen.strand \

   -fix_strand_g \

   #+begin_src sh
     mkdir -p impute2/cmds impute2/out
     
     for c in `seq -w 1 21` ; do
         echo \
             impute2 \
             -phase \
             -m rmap/h-$c.map \
             -h frdata/h-$c.hap \
             -l rlegend/h-$c.legend \
             -g frdata/w-$c.gen \
             -strand_g rstrand/$c \
             -int 20e6 24e6 \
             -Ne 11418 \
             -o impute2/out/$c \
           > impute2/cmds/$c.sh
     done
   #+end_src
** R version
#+begin_src R :var chunk=4000000
  Ne <- 11418
  for(c in chroms) {
      outdir <- file.path("impute2", "cmds", c)
      stdoutdir <- file.path("impute2", "stdout", c)
      stderrdir <- file.path("impute2", "stderr", c)
      dir.create(outdir, recursive=TRUE)
      dir.create(stdoutdir, recursive=TRUE)
      dir.create(stderrdir, recursive=TRUE)
      pos <- scan(posfile(c, "w"))
      intervals <- make.intervals(pos, width=chunk, overlap=chunk/10)
      for(i in seq(nrow(intervals))) {
          cmd <-
              paste("impute2",
                    "-phase",
                    "-m", mapfile(c, "h"),
                    "-h", hapfile(c, "h"),
                    "-l", legendfile(c, "h"),
                    "-g", frdatafile(c, "w"),
                    "-strand_g", rstrandfile(c),
                    "-int", intervals[i,"start"], intervals[i,"end"],
                    "-Ne", Ne,
                    "-o", file.path("impute2", "out", c, i))
          cat(qsub.script(cmd,
                          name=sprintf("%s-%s-%03d", "i2", c, i),
                          outfile=file.path(stdoutdir, i),
                          errfile=file.path(stderrdir, i)),
              file=file.path(outdir, sprintf("%03d.sh", i)))
      }
  }
#+end_src

#+results:

** Stitch haplotypes
* TODO Sample lists

  POBI+MS files have 8267 individuals

  #+begin_src R :results output
  system(paste("~/bin/numindivs-gen", datafile("22", "w")))
  
  system("wc -l 22-MSx.ids")
  #+end_src

  #+results:
  : head: cannot open `data/POBI+MS/22-allx.gen' for reading: No such file or directory
  : -1
  : wc: 22-MS.ids: No such file or directory

* TODO Validate phasing
** Allele frequencies should be the same!
** Distribution of identical stretch lengths
#+begin_src R
  identical.stretch.lengths <- function(hap1, hap2) {
      r <- rle(hap1 == hap2)
      r$lengths[r$values]
  }
#+end_src

#+results:

*** Compare Orkney vs Norway and Spain vs Norway
#+begin_src R :var chrom=22 :var nmax=99999
  indivs.d <- pobi.ms.read.samplefile()
  ids <- scan(indivfile(chrom, "w"), what="")
  pop1 <- "Norway"
  haps <- read.haplotypes(hapfile(chrom, "w"), ids)
  h1 <- extract.haplotypes(pop1, haps, indivs.d)
  
  n1 <- min(nmax,ncol(h1))
  n2 <- min(nmax,ncol(h2))
  
  id.lengths <- list()
  id.lengths[[pop1]] <- list()
  for(pop2 in c("Orkney","Spain")) {
      cat(pop1, "vs", pop2, "\n")
      h2 <- extract.haplotypes(pop2, haps, indivs.d)
      grid <- expand.grid(i=1:n1, j=1:n2)
      id.lengths[[pop1]][[pop2]] <-
          mapply(function(i,j) {
              if(j %% 10 == 0 && i == 1) cat(i, j, "\n")
              identical.stretch.lengths(h1[,i], h2[,j])
          }, grid$i, grid$j, SIMPLIFY=FALSE)
  }
#+end_src

#+results:

* TODO Create Garrett input files
** email
#+begin_example 
From: Garrett Hellenthal <ghellenthal@gmail.com>
Subject: Re: this week
Date: Fri, 18 Jun 2010 12:24:27 +0100
To: Dan Davison <davison@stats.ox.ac.uk>

Hi Dan -

I've attached example input files, for an analysis painting the Basque HGDP
haplotypes as a mosaic of the other HGDP European populations' "donor"
haplotypes (I think for chromo 22). There are 3 files. We probably want to
have one set of haplotype and recomrate files per chromosome.

The haplotype input format (e.g. "BasqueCondOnEurope.phase.inp") is
PHASE-input style, but with an additional line at the top noting how many of
the haplotypes in the file are to be used as donors. Also, these X "donor
haplotypes" should be the in the first X rows of haplotypes in the file.
These should be ordered such that the first X_1 donor haplotypes are from
donor population 1 (with every two haplotype lines from a single donor
individual), the next X_2 donor haplotypes from population 2, etc.... The
remaining haplotypes in the file should be from the recipient individuals
(in our case the POBI inds), again with every two consecutive haplotypes an
individual. Alleles should be 0 or 1.

In case you haven't worked with PHASE much before, the PHASE-ish file format
I use is as follows:

num.donorhaps
num.total.inds
num.snps
P positions.vector
SSSS....SSS <-- repeated "num.snps" times
donorhap_1
donorhap_2
donorhap_3
.
.
donorhap_{ndonorhaps}
recipienthap_1
.
.
recipienthap_{2*nind-ndonorhaps}

For example, if there are 60 donor haps and 20 POBI haps at 5 snps (with
basepair positions 100,...,500), the file should be:

60
40
5
P 100 200 300 400 500
SSSSS
00100
01000
(etc)

There are two other files I need as well: one (a) specifying recombination
rate, and one (b) specifying the donor populations.

For (a), e.g. "BasqueCondOnEurope.recomrates", there should be two columns,
one giving basepair positions and the other giving the recombination rate
(the probability of recombination per generation per basepair) between the
basepair in its row and the basepair in the next row. (This is equivalent to
the total genetic distance in Morgans between these two basepairs divided by
the total physical distance between the two.) There should also be a header
file (see attached).

For (b), e.g. "BasqueCondOnEurope.donorlist", there should be one row per
donor population and two columns: one giving the population name and the
other giving the number of haplotypes from that pop.

let me know if you have any questions -- sounds like things are moving along
then!
Garrett



On Fri, Jun 18, 2010 at 11:04 AM, Dan Davison <davison@stats.ox.ac.uk>wrote:

> Hi Garrett, could you tell me exactly what input files
> your software uses?
> Dan
>
> Garrett Hellenthal <ghellenthal@gmail.com> writes:
>
> > Hi Dan -
> >
> > Not sure how this ended up last week -- are you set up for phasing
> > now? Did you settle on HapMap Phase II vs Phase III?
> >
> > Garrett
> >
> >
> > On Tue, Jun 1, 2010 at 1:02 PM, Garrett Hellenthal
> > <ghellenthal@gmail.com> wrote:
> >> If I'm not there, I may be up on the top floor rec area finishing lunch!
> >> Garrett
> >>
> >>
> >> On Tue, Jun 1, 2010 at 12:51 PM, Garrett Hellenthal
> >> <ghellenthal@gmail.com> wrote:
> >>> It's on the 2nd floor, room 30.09. It's on the side of the building
> >>> opposite where Peter's office is.
> >>>
> >>> see you then,
> >>> Garrett
> >>>
> >>>
> >>> On Tue, Jun 1, 2010 at 12:48 PM, Dan Davison <davison@stats.ox.ac.uk>
> wrote:
> >>>> Garrett Hellenthal <ghellenthal@gmail.com> writes:
> >>>>
> >>>>> Can we do 2:30 instead? Not sure when in 3-4 I'm meeting with Peter,
> >>>>
> >>>> Sure, see you at 2:30. Where will you be (where's your office)?
> >>>>
> >>>
> >>
>
[2. application/octet-stream; BasqueCondOnEurope.donorlist]...

[3. application/x-gzip; BasqueCondOnEurope.phase.inp.gz]...

[4. application/octet-stream; BasqueCondOnEurope.recomrates]...
#+end_example
* PCA
#+begin_src sh
  cd data/POBI+MS
  python ~/src/wtccc2/wtccc2-analyse/wtccc2-analyse.py \
      --pca --platform illumina \
      --cohorts 'MS POBI' --exclude ../MS/exclusions.all \
      --outfile MS-POBI-pca-
#+end_src

* Synchronise
#+begin_src sh :results output
  rsync -auvz --delete data/MS/ $cetus:data/MS/ && rsync -auvz --delete data/MS/ $oak:data/MS/
#+end_src

#+results:
: building file list ... done
: 
: sent 314 bytes  received 20 bytes  668.00 bytes/sec
: total size is 612863  speedup is 1834.92
: sending incremental file list
: 
: sent 284 bytes  received 13 bytes  198.00 bytes/sec
: total size is 612863  speedup is 2063.51

# Local Variables=
# org-babel-default-header-args:R=((:session . "*R-PoBI*"))
# End=
